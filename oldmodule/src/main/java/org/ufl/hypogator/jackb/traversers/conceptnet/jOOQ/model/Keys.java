/*
 * This file is generated by jOOQ.
 */
package org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model;


import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.EdgeFeatures;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.EdgeSources;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.Edges;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.NodePrefixes;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.Nodes;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.Relations;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.Sources;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.EdgeFeaturesRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.EdgeSourcesRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.EdgesRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.NodePrefixesRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.NodesRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.RelationsRecord;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.SourcesRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EdgeSourcesRecord> EDGE_SOURCES_UNIQUE = UniqueKeys0.EDGE_SOURCES_UNIQUE;
    public static final UniqueKey<EdgesRecord> EDGES_PKEY = UniqueKeys0.EDGES_PKEY;
    public static final UniqueKey<EdgesRecord> EDGES_UNIQUE_URI = UniqueKeys0.EDGES_UNIQUE_URI;
    public static final UniqueKey<NodePrefixesRecord> NODE_PREFIXES_UNIQUE = UniqueKeys0.NODE_PREFIXES_UNIQUE;
    public static final UniqueKey<NodesRecord> NODES_PKEY = UniqueKeys0.NODES_PKEY;
    public static final UniqueKey<NodesRecord> NODES_UNIQUE_URI = UniqueKeys0.NODES_UNIQUE_URI;
    public static final UniqueKey<RelationsRecord> RELATIONS_PKEY = UniqueKeys0.RELATIONS_PKEY;
    public static final UniqueKey<RelationsRecord> RELATIONS_UNIQUE_URI = UniqueKeys0.RELATIONS_UNIQUE_URI;
    public static final UniqueKey<SourcesRecord> SOURCES_PKEY = UniqueKeys0.SOURCES_PKEY;
    public static final UniqueKey<SourcesRecord> SOURCES_UNIQUE_URI = UniqueKeys0.SOURCES_UNIQUE_URI;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EdgeFeaturesRecord, RelationsRecord> EDGE_FEATURES__EDGE_FEATURES_REL_ID_FKEY = ForeignKeys0.EDGE_FEATURES__EDGE_FEATURES_REL_ID_FKEY;
    public static final ForeignKey<EdgeFeaturesRecord, NodesRecord> EDGE_FEATURES__EDGE_FEATURES_NODE_ID_FKEY = ForeignKeys0.EDGE_FEATURES__EDGE_FEATURES_NODE_ID_FKEY;
    public static final ForeignKey<EdgeFeaturesRecord, EdgesRecord> EDGE_FEATURES__EDGE_FEATURES_EDGE_ID_FKEY = ForeignKeys0.EDGE_FEATURES__EDGE_FEATURES_EDGE_ID_FKEY;
    public static final ForeignKey<EdgeSourcesRecord, EdgesRecord> EDGE_SOURCES__EDGE_SOURCES_EDGE_ID_FKEY = ForeignKeys0.EDGE_SOURCES__EDGE_SOURCES_EDGE_ID_FKEY;
    public static final ForeignKey<EdgeSourcesRecord, SourcesRecord> EDGE_SOURCES__EDGE_SOURCES_SOURCE_ID_FKEY = ForeignKeys0.EDGE_SOURCES__EDGE_SOURCES_SOURCE_ID_FKEY;
    public static final ForeignKey<EdgesRecord, RelationsRecord> EDGES__EDGES_RELATION_ID_FKEY = ForeignKeys0.EDGES__EDGES_RELATION_ID_FKEY;
    public static final ForeignKey<EdgesRecord, NodesRecord> EDGES__EDGES_START_ID_FKEY = ForeignKeys0.EDGES__EDGES_START_ID_FKEY;
    public static final ForeignKey<EdgesRecord, NodesRecord> EDGES__EDGES_END_ID_FKEY = ForeignKeys0.EDGES__EDGES_END_ID_FKEY;
    public static final ForeignKey<NodePrefixesRecord, NodesRecord> NODE_PREFIXES__NODE_PREFIXES_NODE_ID_FKEY = ForeignKeys0.NODE_PREFIXES__NODE_PREFIXES_NODE_ID_FKEY;
    public static final ForeignKey<NodePrefixesRecord, NodesRecord> NODE_PREFIXES__NODE_PREFIXES_PREFIX_ID_FKEY = ForeignKeys0.NODE_PREFIXES__NODE_PREFIXES_PREFIX_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<EdgeSourcesRecord> EDGE_SOURCES_UNIQUE = Internal.createUniqueKey(EdgeSources.EDGE_SOURCES, "edge_sources_unique", EdgeSources.EDGE_SOURCES.EDGE_ID, EdgeSources.EDGE_SOURCES.SOURCE_ID);
        public static final UniqueKey<EdgesRecord> EDGES_PKEY = Internal.createUniqueKey(Edges.EDGES, "edges_pkey", Edges.EDGES.ID);
        public static final UniqueKey<EdgesRecord> EDGES_UNIQUE_URI = Internal.createUniqueKey(Edges.EDGES, "edges_unique_uri", Edges.EDGES.URI);
        public static final UniqueKey<NodePrefixesRecord> NODE_PREFIXES_UNIQUE = Internal.createUniqueKey(NodePrefixes.NODE_PREFIXES, "node_prefixes_unique", NodePrefixes.NODE_PREFIXES.NODE_ID, NodePrefixes.NODE_PREFIXES.PREFIX_ID);
        public static final UniqueKey<NodesRecord> NODES_PKEY = Internal.createUniqueKey(Nodes.NODES, "nodes_pkey", Nodes.NODES.ID);
        public static final UniqueKey<NodesRecord> NODES_UNIQUE_URI = Internal.createUniqueKey(Nodes.NODES, "nodes_unique_uri", Nodes.NODES.URI);
        public static final UniqueKey<RelationsRecord> RELATIONS_PKEY = Internal.createUniqueKey(Relations.RELATIONS, "relations_pkey", Relations.RELATIONS.ID);
        public static final UniqueKey<RelationsRecord> RELATIONS_UNIQUE_URI = Internal.createUniqueKey(Relations.RELATIONS, "relations_unique_uri", Relations.RELATIONS.URI);
        public static final UniqueKey<SourcesRecord> SOURCES_PKEY = Internal.createUniqueKey(Sources.SOURCES, "sources_pkey", Sources.SOURCES.ID);
        public static final UniqueKey<SourcesRecord> SOURCES_UNIQUE_URI = Internal.createUniqueKey(Sources.SOURCES, "sources_unique_uri", Sources.SOURCES.URI);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<EdgeFeaturesRecord, RelationsRecord> EDGE_FEATURES__EDGE_FEATURES_REL_ID_FKEY = Internal.createForeignKey(Keys.RELATIONS_PKEY, EdgeFeatures.EDGE_FEATURES, "edge_features__edge_features_rel_id_fkey", EdgeFeatures.EDGE_FEATURES.REL_ID);
        public static final ForeignKey<EdgeFeaturesRecord, NodesRecord> EDGE_FEATURES__EDGE_FEATURES_NODE_ID_FKEY = Internal.createForeignKey(Keys.NODES_PKEY, EdgeFeatures.EDGE_FEATURES, "edge_features__edge_features_node_id_fkey", EdgeFeatures.EDGE_FEATURES.NODE_ID);
        public static final ForeignKey<EdgeFeaturesRecord, EdgesRecord> EDGE_FEATURES__EDGE_FEATURES_EDGE_ID_FKEY = Internal.createForeignKey(Keys.EDGES_PKEY, EdgeFeatures.EDGE_FEATURES, "edge_features__edge_features_edge_id_fkey", EdgeFeatures.EDGE_FEATURES.EDGE_ID);
        public static final ForeignKey<EdgeSourcesRecord, EdgesRecord> EDGE_SOURCES__EDGE_SOURCES_EDGE_ID_FKEY = Internal.createForeignKey(Keys.EDGES_PKEY, EdgeSources.EDGE_SOURCES, "edge_sources__edge_sources_edge_id_fkey", EdgeSources.EDGE_SOURCES.EDGE_ID);
        public static final ForeignKey<EdgeSourcesRecord, SourcesRecord> EDGE_SOURCES__EDGE_SOURCES_SOURCE_ID_FKEY = Internal.createForeignKey(Keys.SOURCES_PKEY, EdgeSources.EDGE_SOURCES, "edge_sources__edge_sources_source_id_fkey", EdgeSources.EDGE_SOURCES.SOURCE_ID);
        public static final ForeignKey<EdgesRecord, RelationsRecord> EDGES__EDGES_RELATION_ID_FKEY = Internal.createForeignKey(Keys.RELATIONS_PKEY, Edges.EDGES, "edges__edges_relation_id_fkey", Edges.EDGES.RELATION_ID);
        public static final ForeignKey<EdgesRecord, NodesRecord> EDGES__EDGES_START_ID_FKEY = Internal.createForeignKey(Keys.NODES_PKEY, Edges.EDGES, "edges__edges_start_id_fkey", Edges.EDGES.START_ID);
        public static final ForeignKey<EdgesRecord, NodesRecord> EDGES__EDGES_END_ID_FKEY = Internal.createForeignKey(Keys.NODES_PKEY, Edges.EDGES, "edges__edges_end_id_fkey", Edges.EDGES.END_ID);
        public static final ForeignKey<NodePrefixesRecord, NodesRecord> NODE_PREFIXES__NODE_PREFIXES_NODE_ID_FKEY = Internal.createForeignKey(Keys.NODES_PKEY, NodePrefixes.NODE_PREFIXES, "node_prefixes__node_prefixes_node_id_fkey", NodePrefixes.NODE_PREFIXES.NODE_ID);
        public static final ForeignKey<NodePrefixesRecord, NodesRecord> NODE_PREFIXES__NODE_PREFIXES_PREFIX_ID_FKEY = Internal.createForeignKey(Keys.NODES_PKEY, NodePrefixes.NODE_PREFIXES, "node_prefixes__node_prefixes_prefix_id_fkey", NodePrefixes.NODE_PREFIXES.PREFIX_ID);
    }
}
