/*
 * This file is generated by jOOQ.
 */
package org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables;


import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Indexes;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Keys;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Public;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.EdgeSourcesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdgeSources extends TableImpl<EdgeSourcesRecord> {

    private static final long serialVersionUID = -7460612;

    /**
     * The reference instance of <code>public.edge_sources</code>
     */
    public static final EdgeSources EDGE_SOURCES = new EdgeSources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EdgeSourcesRecord> getRecordType() {
        return EdgeSourcesRecord.class;
    }

    /**
     * The column <code>public.edge_sources.edge_id</code>.
     */
    public final TableField<EdgeSourcesRecord, Integer> EDGE_ID = createField("edge_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.edge_sources.source_id</code>.
     */
    public final TableField<EdgeSourcesRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.edge_sources</code> table reference
     */
    public EdgeSources() {
        this(DSL.name("edge_sources"), null);
    }

    /**
     * Create an aliased <code>public.edge_sources</code> table reference
     */
    public EdgeSources(String alias) {
        this(DSL.name(alias), EDGE_SOURCES);
    }

    /**
     * Create an aliased <code>public.edge_sources</code> table reference
     */
    public EdgeSources(Name alias) {
        this(alias, EDGE_SOURCES);
    }

    private EdgeSources(Name alias, Table<EdgeSourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private EdgeSources(Name alias, Table<EdgeSourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EdgeSources(Table<O> child, ForeignKey<O, EdgeSourcesRecord> key) {
        super(child, key, EDGE_SOURCES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EDGE_SOURCES_UNIQUE, Indexes.ES_EDGE, Indexes.ES_SOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EdgeSourcesRecord>> getKeys() {
        return Arrays.<UniqueKey<EdgeSourcesRecord>>asList(Keys.EDGE_SOURCES_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EdgeSourcesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EdgeSourcesRecord, ?>>asList(Keys.EDGE_SOURCES__EDGE_SOURCES_EDGE_ID_FKEY, Keys.EDGE_SOURCES__EDGE_SOURCES_SOURCE_ID_FKEY);
    }

    public Edges edges() {
        return new Edges(this, Keys.EDGE_SOURCES__EDGE_SOURCES_EDGE_ID_FKEY);
    }

    public Sources sources() {
        return new Sources(this, Keys.EDGE_SOURCES__EDGE_SOURCES_SOURCE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeSources as(String alias) {
        return new EdgeSources(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeSources as(Name alias) {
        return new EdgeSources(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EdgeSources rename(String name) {
        return new EdgeSources(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EdgeSources rename(Name name) {
        return new EdgeSources(name, null);
    }
}
