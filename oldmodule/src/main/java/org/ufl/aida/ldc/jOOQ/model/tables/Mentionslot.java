/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ldc.jOOQ.model.tables;


import org.ufl.aida.ldc.jOOQ.model.Public;
import org.ufl.aida.ldc.jOOQ.model.tables.records.MentionslotRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mentionslot extends TableImpl<MentionslotRecord> {

    private static final long serialVersionUID = -217450265;

    /**
     * The reference instance of <code>public.mentionslot</code>
     */
    public static final Mentionslot MENTIONSLOT = new Mentionslot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MentionslotRecord> getRecordType() {
        return MentionslotRecord.class;
    }

    /**
     * The column <code>public.mentionslot.tree_id</code>.
     */
    public final TableField<MentionslotRecord, String> TREE_ID = createField("tree_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.id</code>.
     */
    public final TableField<MentionslotRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.mentionId</code>.
     */
    public final TableField<MentionslotRecord, String> MENTIONID = createField("mentionId", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.type</code>.
     */
    public final TableField<MentionslotRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.subtype</code>.
     */
    public final TableField<MentionslotRecord, String> SUBTYPE = createField("subtype", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.attributes</code>.
     */
    public final TableField<MentionslotRecord, String[]> ATTRIBUTES = createField("attributes", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public final TableField<MentionslotRecord, Object> TXT_ENTRYPOINT = createField("txt_entrypoint", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"jsonb\""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public final TableField<MentionslotRecord, Object> SLOTS = createField("slots", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public final TableField<MentionslotRecord, Object> START_DATE = createField("start_date", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"jsonb\""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public final TableField<MentionslotRecord, Object> END_DATE = createField("end_date", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"jsonb\""), this, "");

    /**
     * The column <code>public.mentionslot.text_string</code>.
     */
    public final TableField<MentionslotRecord, String> TEXT_STRING = createField("text_string", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.justification</code>.
     */
    public final TableField<MentionslotRecord, String> JUSTIFICATION = createField("justification", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.topic_id</code>.
     */
    public final TableField<MentionslotRecord, String> TOPIC_ID = createField("topic_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.category</code>.
     */
    public final TableField<MentionslotRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.handle</code>.
     */
    public final TableField<MentionslotRecord, String> HANDLE = createField("handle", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mentionslot.description</code>.
     */
    public final TableField<MentionslotRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.mentionslot</code> table reference
     */
    public Mentionslot() {
        this(DSL.name("mentionslot"), null);
    }

    /**
     * Create an aliased <code>public.mentionslot</code> table reference
     */
    public Mentionslot(String alias) {
        this(DSL.name(alias), MENTIONSLOT);
    }

    /**
     * Create an aliased <code>public.mentionslot</code> table reference
     */
    public Mentionslot(Name alias) {
        this(alias, MENTIONSLOT);
    }

    private Mentionslot(Name alias, Table<MentionslotRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mentionslot(Name alias, Table<MentionslotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Mentionslot(Table<O> child, ForeignKey<O, MentionslotRecord> key) {
        super(child, key, MENTIONSLOT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mentionslot as(String alias) {
        return new Mentionslot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mentionslot as(Name alias) {
        return new Mentionslot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mentionslot rename(String name) {
        return new Mentionslot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Mentionslot rename(Name name) {
        return new Mentionslot(name, null);
    }
}
