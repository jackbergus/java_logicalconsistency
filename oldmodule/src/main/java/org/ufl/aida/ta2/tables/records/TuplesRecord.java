/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ta2.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.ufl.aida.ta2.tables.Tuples;
import org.ufl.aida.ta2.tables.interfaces.ITuples;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TuplesRecord extends UpdatableRecordImpl<TuplesRecord> implements Record7<String, String, Double, Boolean, Boolean, String[], Object[]>, ITuples {

    private static final long serialVersionUID = -475975314;

    /**
     * Setter for <code>public.tuples.nistType</code>.
     */
    @Override
    public void setNisttype(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tuples.nistType</code>.
     */
    @Override
    public String getNisttype() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.tuples.mid</code>.
     */
    @Override
    public void setMid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tuples.mid</code>.
     */
    @Override
    public String getMid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tuples.score</code>.
     */
    @Override
    public void setScore(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tuples.score</code>.
     */
    @Override
    public Double getScore() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.tuples.negated</code>.
     */
    @Override
    public void setNegated(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tuples.negated</code>.
     */
    @Override
    public Boolean getNegated() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.tuples.hedged</code>.
     */
    @Override
    public void setHedged(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tuples.hedged</code>.
     */
    @Override
    public Boolean getHedged() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.tuples.constituent</code>.
     */
    @Override
    public void setConstituent(String... value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tuples.constituent</code>.
     */
    @Override
    public String[] getConstituent() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.tuples.array_agg</code>.
     */
    @Override
    public void setArrayAgg(Object... value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tuples.array_agg</code>.
     */
    @Override
    public Object[] getArrayAgg() {
        return (Object[]) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, Double, Boolean, Boolean, String[], Object[]> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, Double, Boolean, Boolean, String[], Object[]> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tuples.TUPLES.NISTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tuples.TUPLES.MID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Tuples.TUPLES.SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Tuples.TUPLES.NEGATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Tuples.TUPLES.HEDGED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field6() {
        return Tuples.TUPLES.CONSTITUENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object[]> field7() {
        return Tuples.TUPLES.ARRAY_AGG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getNisttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getMid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getNegated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getHedged();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component6() {
        return getConstituent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object[] component7() {
        return getArrayAgg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getNisttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getNegated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getHedged();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value6() {
        return getConstituent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object[] value7() {
        return getArrayAgg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value1(String value) {
        setNisttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value2(String value) {
        setMid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value3(Double value) {
        setScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value4(Boolean value) {
        setNegated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value5(Boolean value) {
        setHedged(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value6(String... value) {
        setConstituent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord value7(Object... value) {
        setArrayAgg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TuplesRecord values(String value1, String value2, Double value3, Boolean value4, Boolean value5, String[] value6, Object[] value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITuples from) {
        setNisttype(from.getNisttype());
        setMid(from.getMid());
        setScore(from.getScore());
        setNegated(from.getNegated());
        setHedged(from.getHedged());
        setConstituent(from.getConstituent());
        setArrayAgg(from.getArrayAgg());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITuples> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TuplesRecord
     */
    public TuplesRecord() {
        super(Tuples.TUPLES);
    }

    /**
     * Create a detached, initialised TuplesRecord
     */
    public TuplesRecord(String nisttype, String mid, Double score, Boolean negated, Boolean hedged, String[] constituent, Object[] arrayAgg) {
        super(Tuples.TUPLES);

        set(0, nisttype);
        set(1, mid);
        set(2, score);
        set(3, negated);
        set(4, hedged);
        set(5, constituent);
        set(6, arrayAgg);
    }
}
