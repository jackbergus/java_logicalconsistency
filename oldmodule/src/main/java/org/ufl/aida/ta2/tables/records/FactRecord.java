/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ta2.tables.records;


import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;
import org.ufl.aida.ta2.tables.Fact;
import org.ufl.aida.ta2.tables.interfaces.IFact;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FactRecord extends TableRecordImpl<FactRecord> implements IFact {

    private static final long serialVersionUID = -1075141249;

    /**
     * Setter for <code>public.fact.mid</code>.
     */
    @Override
    public void setMid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.fact.mid</code>.
     */
    @Override
    public String getMid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.fact.id</code>.
     */
    @Override
    public void setId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.fact.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.fact.nistTypeLeft</code>.
     */
    @Override
    public void setNisttypeleft(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.fact.nistTypeLeft</code>.
     */
    @Override
    public String getNisttypeleft() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.fact.nistTypeRight</code>.
     */
    @Override
    public void setNisttyperight(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.fact.nistTypeRight</code>.
     */
    @Override
    public String getNisttyperight() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.fact.nistType</code>.
     */
    @Override
    public void setNisttype(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.fact.nistType</code>.
     */
    @Override
    public String getNisttype() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.fact.tree_id</code>.
     */
    @Override
    public void setTreeId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.fact.tree_id</code>.
     */
    @Override
    public String getTreeId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.fact.partialLabel</code>.
     */
    @Override
    public void setPartiallabel(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.fact.partialLabel</code>.
     */
    @Override
    public String getPartiallabel() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.fact.nistFullLabel</code>.
     */
    @Override
    public void setNistfulllabel(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.fact.nistFullLabel</code>.
     */
    @Override
    public String getNistfulllabel() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.fact.argumentId</code>.
     */
    @Override
    public void setArgumentid(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.fact.argumentId</code>.
     */
    @Override
    public String getArgumentid() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.fact.argumentNistType</code>.
     */
    @Override
    public void setArgumentnisttype(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.fact.argumentNistType</code>.
     */
    @Override
    public String getArgumentnisttype() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.fact.argumentRawString</code>.
     */
    @Override
    public void setArgumentrawstring(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.fact.argumentRawString</code>.
     */
    @Override
    public String getArgumentrawstring() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.fact.argumentClusterId</code>.
     */
    @Override
    public void setArgumentclusterid(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.fact.argumentClusterId</code>.
     */
    @Override
    public String getArgumentclusterid() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.fact.argumentBadlyTranslatedString</code>.
     */
    @Override
    public void setArgumentbadlytranslatedstring(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.fact.argumentBadlyTranslatedString</code>.
     */
    @Override
    public String getArgumentbadlytranslatedstring() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.fact.rKind</code>.
     */
    @Override
    public void setRkind(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.fact.rKind</code>.
     */
    @Override
    public String getRkind() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.fact.rNistName</code>.
     */
    @Override
    public void setRnistname(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.fact.rNistName</code>.
     */
    @Override
    public String getRnistname() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.fact.resolvedName</code>.
     */
    @Override
    public void setResolvedname(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.fact.resolvedName</code>.
     */
    @Override
    public String getResolvedname() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.fact.resolvedType</code>.
     */
    @Override
    public void setResolvedtype(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.fact.resolvedType</code>.
     */
    @Override
    public String getResolvedtype() {
        return (String) get(16);
    }

    /**
     * Setter for <code>public.fact.score</code>.
     */
    @Override
    public void setScore(Double value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.fact.score</code>.
     */
    @Override
    public Double getScore() {
        return (Double) get(17);
    }

    /**
     * Setter for <code>public.fact.scoreEvent</code>.
     */
    @Override
    public void setScoreevent(Double value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.fact.scoreEvent</code>.
     */
    @Override
    public Double getScoreevent() {
        return (Double) get(18);
    }

    /**
     * Setter for <code>public.fact.isNegated</code>.
     */
    @Override
    public void setIsnegated(Boolean value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.fact.isNegated</code>.
     */
    @Override
    public Boolean getIsnegated() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>public.fact.isHedged</code>.
     */
    @Override
    public void setIshedged(Boolean value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.fact.isHedged</code>.
     */
    @Override
    public Boolean getIshedged() {
        return (Boolean) get(20);
    }

    /**
     * Setter for <code>public.fact.isEventNegated</code>.
     */
    @Override
    public void setIseventnegated(Boolean value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.fact.isEventNegated</code>.
     */
    @Override
    public Boolean getIseventnegated() {
        return (Boolean) get(21);
    }

    /**
     * Setter for <code>public.fact.isEventHedged</code>.
     */
    @Override
    public void setIseventhedged(Boolean value) {
        set(22, value);
    }

    /**
     * Getter for <code>public.fact.isEventHedged</code>.
     */
    @Override
    public Boolean getIseventhedged() {
        return (Boolean) get(22);
    }

    /**
     * Setter for <code>public.fact.fromFuzzyMatching</code>.
     */
    @Override
    public void setFromfuzzymatching(Boolean value) {
        set(23, value);
    }

    /**
     * Getter for <code>public.fact.fromFuzzyMatching</code>.
     */
    @Override
    public Boolean getFromfuzzymatching() {
        return (Boolean) get(23);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IFact from) {
        setMid(from.getMid());
        setId(from.getId());
        setNisttypeleft(from.getNisttypeleft());
        setNisttyperight(from.getNisttyperight());
        setNisttype(from.getNisttype());
        setTreeId(from.getTreeId());
        setPartiallabel(from.getPartiallabel());
        setNistfulllabel(from.getNistfulllabel());
        setArgumentid(from.getArgumentid());
        setArgumentnisttype(from.getArgumentnisttype());
        setArgumentrawstring(from.getArgumentrawstring());
        setArgumentclusterid(from.getArgumentclusterid());
        setArgumentbadlytranslatedstring(from.getArgumentbadlytranslatedstring());
        setRkind(from.getRkind());
        setRnistname(from.getRnistname());
        setResolvedname(from.getResolvedname());
        setResolvedtype(from.getResolvedtype());
        setScore(from.getScore());
        setScoreevent(from.getScoreevent());
        setIsnegated(from.getIsnegated());
        setIshedged(from.getIshedged());
        setIseventnegated(from.getIseventnegated());
        setIseventhedged(from.getIseventhedged());
        setFromfuzzymatching(from.getFromfuzzymatching());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IFact> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FactRecord
     */
    public FactRecord() {
        super(Fact.FACT);
    }

    /**
     * Create a detached, initialised FactRecord
     */
    public FactRecord(String mid, String id, String nisttypeleft, String nisttyperight, String nisttype, String treeId, String partiallabel, String nistfulllabel, String argumentid, String argumentnisttype, String argumentrawstring, String argumentclusterid, String argumentbadlytranslatedstring, String rkind, String rnistname, String resolvedname, String resolvedtype, Double score, Double scoreevent, Boolean isnegated, Boolean ishedged, Boolean iseventnegated, Boolean iseventhedged, Boolean fromfuzzymatching) {
        super(Fact.FACT);

        set(0, mid);
        set(1, id);
        set(2, nisttypeleft);
        set(3, nisttyperight);
        set(4, nisttype);
        set(5, treeId);
        set(6, partiallabel);
        set(7, nistfulllabel);
        set(8, argumentid);
        set(9, argumentnisttype);
        set(10, argumentrawstring);
        set(11, argumentclusterid);
        set(12, argumentbadlytranslatedstring);
        set(13, rkind);
        set(14, rnistname);
        set(15, resolvedname);
        set(16, resolvedtype);
        set(17, score);
        set(18, scoreevent);
        set(19, isnegated);
        set(20, ishedged);
        set(21, iseventnegated);
        set(22, iseventhedged);
        set(23, fromfuzzymatching);
    }
}
