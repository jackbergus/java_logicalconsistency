/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ta2.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;
import org.ufl.aida.ta2.tables.Expansions;
import org.ufl.aida.ta2.tables.interfaces.IExpansions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpansionsRecord extends TableRecordImpl<ExpansionsRecord> implements Record13<String[], String, Double, String[], String[], String[], String[], String[], String[], String[], String, String, String>, IExpansions {

    private static final long serialVersionUID = 1660491437;

    /**
     * Setter for <code>public.expansions.eid</code>.
     */
    @Override
    public void setEid(String... value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.expansions.eid</code>.
     */
    @Override
    public String[] getEid() {
        return (String[]) get(0);
    }

    /**
     * Setter for <code>public.expansions.type_event</code>.
     */
    @Override
    public void setTypeEvent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.expansions.type_event</code>.
     */
    @Override
    public String getTypeEvent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.expansions.weight</code>.
     */
    @Override
    public void setWeight(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.expansions.weight</code>.
     */
    @Override
    public Double getWeight() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.expansions.arg1</code>.
     */
    @Override
    public void setArg1(String... value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.expansions.arg1</code>.
     */
    @Override
    public String[] getArg1() {
        return (String[]) get(3);
    }

    /**
     * Setter for <code>public.expansions.arg2</code>.
     */
    @Override
    public void setArg2(String... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.expansions.arg2</code>.
     */
    @Override
    public String[] getArg2() {
        return (String[]) get(4);
    }

    /**
     * Setter for <code>public.expansions.arg3</code>.
     */
    @Override
    public void setArg3(String... value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.expansions.arg3</code>.
     */
    @Override
    public String[] getArg3() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.expansions.arg4</code>.
     */
    @Override
    public void setArg4(String... value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.expansions.arg4</code>.
     */
    @Override
    public String[] getArg4() {
        return (String[]) get(6);
    }

    /**
     * Setter for <code>public.expansions.arg5</code>.
     */
    @Override
    public void setArg5(String... value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.expansions.arg5</code>.
     */
    @Override
    public String[] getArg5() {
        return (String[]) get(7);
    }

    /**
     * Setter for <code>public.expansions.arg6</code>.
     */
    @Override
    public void setArg6(String... value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.expansions.arg6</code>.
     */
    @Override
    public String[] getArg6() {
        return (String[]) get(8);
    }

    /**
     * Setter for <code>public.expansions.arg7</code>.
     */
    @Override
    public void setArg7(String... value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.expansions.arg7</code>.
     */
    @Override
    public String[] getArg7() {
        return (String[]) get(9);
    }

    /**
     * Setter for <code>public.expansions.bitmap_null</code>.
     */
    @Override
    public void setBitmapNull(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.expansions.bitmap_null</code>.
     */
    @Override
    public String getBitmapNull() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.expansions.bitmap_neg</code>.
     */
    @Override
    public void setBitmapNeg(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.expansions.bitmap_neg</code>.
     */
    @Override
    public String getBitmapNeg() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.expansions.bitmap_hed</code>.
     */
    @Override
    public void setBitmapHed(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.expansions.bitmap_hed</code>.
     */
    @Override
    public String getBitmapHed() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String[], String, Double, String[], String[], String[], String[], String[], String[], String[], String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String[], String, Double, String[], String[], String[], String[], String[], String[], String[], String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field1() {
        return Expansions.EXPANSIONS.EID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Expansions.EXPANSIONS.TYPE_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Expansions.EXPANSIONS.WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field4() {
        return Expansions.EXPANSIONS.ARG1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field5() {
        return Expansions.EXPANSIONS.ARG2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field6() {
        return Expansions.EXPANSIONS.ARG3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field7() {
        return Expansions.EXPANSIONS.ARG4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field8() {
        return Expansions.EXPANSIONS.ARG5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field9() {
        return Expansions.EXPANSIONS.ARG6;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field10() {
        return Expansions.EXPANSIONS.ARG7;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Expansions.EXPANSIONS.BITMAP_NULL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Expansions.EXPANSIONS.BITMAP_NEG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Expansions.EXPANSIONS.BITMAP_HED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component1() {
        return getEid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTypeEvent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component4() {
        return getArg1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component5() {
        return getArg2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component6() {
        return getArg3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component7() {
        return getArg4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component8() {
        return getArg5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component9() {
        return getArg6();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component10() {
        return getArg7();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getBitmapNull();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getBitmapNeg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getBitmapHed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value1() {
        return getEid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTypeEvent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value4() {
        return getArg1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value5() {
        return getArg2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value6() {
        return getArg3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value7() {
        return getArg4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value8() {
        return getArg5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value9() {
        return getArg6();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value10() {
        return getArg7();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getBitmapNull();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getBitmapNeg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getBitmapHed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value1(String... value) {
        setEid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value2(String value) {
        setTypeEvent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value3(Double value) {
        setWeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value4(String... value) {
        setArg1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value5(String... value) {
        setArg2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value6(String... value) {
        setArg3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value7(String... value) {
        setArg4(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value8(String... value) {
        setArg5(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value9(String... value) {
        setArg6(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value10(String... value) {
        setArg7(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value11(String value) {
        setBitmapNull(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value12(String value) {
        setBitmapNeg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord value13(String value) {
        setBitmapHed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpansionsRecord values(String[] value1, String value2, Double value3, String[] value4, String[] value5, String[] value6, String[] value7, String[] value8, String[] value9, String[] value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IExpansions from) {
        setEid(from.getEid());
        setTypeEvent(from.getTypeEvent());
        setWeight(from.getWeight());
        setArg1(from.getArg1());
        setArg2(from.getArg2());
        setArg3(from.getArg3());
        setArg4(from.getArg4());
        setArg5(from.getArg5());
        setArg6(from.getArg6());
        setArg7(from.getArg7());
        setBitmapNull(from.getBitmapNull());
        setBitmapNeg(from.getBitmapNeg());
        setBitmapHed(from.getBitmapHed());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IExpansions> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExpansionsRecord
     */
    public ExpansionsRecord() {
        super(Expansions.EXPANSIONS);
    }

    /**
     * Create a detached, initialised ExpansionsRecord
     */
    public ExpansionsRecord(String[] eid, String typeEvent, Double weight, String[] arg1, String[] arg2, String[] arg3, String[] arg4, String[] arg5, String[] arg6, String[] arg7, String bitmapNull, String bitmapNeg, String bitmapHed) {
        super(Expansions.EXPANSIONS);

        set(0, eid);
        set(1, typeEvent);
        set(2, weight);
        set(3, arg1);
        set(4, arg2);
        set(5, arg3);
        set(6, arg4);
        set(7, arg5);
        set(8, arg6);
        set(9, arg7);
        set(10, bitmapNull);
        set(11, bitmapNeg);
        set(12, bitmapHed);
    }
}
