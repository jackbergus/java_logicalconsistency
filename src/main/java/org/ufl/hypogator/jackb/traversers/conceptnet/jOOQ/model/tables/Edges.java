/*
 * This file is generated by jOOQ.
 */
package org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables;


import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Indexes;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Keys;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Public;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.EdgesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Edges extends TableImpl<EdgesRecord> {

    private static final long serialVersionUID = -1101956853;

    /**
     * The reference instance of <code>public.edges</code>
     */
    public static final Edges EDGES = new Edges();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EdgesRecord> getRecordType() {
        return EdgesRecord.class;
    }

    /**
     * The column <code>public.edges.id</code>.
     */
    public final TableField<EdgesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.edges.uri</code>.
     */
    public final TableField<EdgesRecord, String> URI = createField("uri", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.edges.relation_id</code>.
     */
    public final TableField<EdgesRecord, Integer> RELATION_ID = createField("relation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.edges.start_id</code>.
     */
    public final TableField<EdgesRecord, Integer> START_ID = createField("start_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.edges.end_id</code>.
     */
    public final TableField<EdgesRecord, Integer> END_ID = createField("end_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.edges.weight</code>.
     */
    public final TableField<EdgesRecord, Float> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public final TableField<EdgesRecord, Object> DATA = createField("data", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"jsonb\"").nullable(false), this, "");

    /**
     * Create a <code>public.edges</code> table reference
     */
    public Edges() {
        this(DSL.name("edges"), null);
    }

    /**
     * Create an aliased <code>public.edges</code> table reference
     */
    public Edges(String alias) {
        this(DSL.name(alias), EDGES);
    }

    /**
     * Create an aliased <code>public.edges</code> table reference
     */
    public Edges(Name alias) {
        this(alias, EDGES);
    }

    private Edges(Name alias, Table<EdgesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Edges(Name alias, Table<EdgesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Edges(Table<O> child, ForeignKey<O, EdgesRecord> key) {
        super(child, key, EDGES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EDGE_END, Indexes.EDGE_RELATION, Indexes.EDGE_START, Indexes.EDGE_WEIGHT, Indexes.EDGES_PKEY, Indexes.EDGES_UNIQUE_URI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EdgesRecord> getPrimaryKey() {
        return Keys.EDGES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EdgesRecord>> getKeys() {
        return Arrays.<UniqueKey<EdgesRecord>>asList(Keys.EDGES_PKEY, Keys.EDGES_UNIQUE_URI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EdgesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EdgesRecord, ?>>asList(Keys.EDGES__EDGES_RELATION_ID_FKEY, Keys.EDGES__EDGES_START_ID_FKEY, Keys.EDGES__EDGES_END_ID_FKEY);
    }

    public Relations relations() {
        return new Relations(this, Keys.EDGES__EDGES_RELATION_ID_FKEY);
    }

    public Nodes edges_EdgesStartIdFkey() {
        return new Nodes(this, Keys.EDGES__EDGES_START_ID_FKEY);
    }

    public Nodes edges_EdgesEndIdFkey() {
        return new Nodes(this, Keys.EDGES__EDGES_END_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Edges as(String alias) {
        return new Edges(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Edges as(Name alias) {
        return new Edges(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Edges rename(String name) {
        return new Edges(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Edges rename(Name name) {
        return new Edges(name, null);
    }
}
