/*
 * This file is generated by jOOQ.
 */
package org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables;


import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Indexes;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.Public;
import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records.RankedFeaturesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RankedFeatures extends TableImpl<RankedFeaturesRecord> {

    private static final long serialVersionUID = -1014859166;

    /**
     * The reference instance of <code>public.ranked_features</code>
     */
    public static final RankedFeatures RANKED_FEATURES = new RankedFeatures();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RankedFeaturesRecord> getRecordType() {
        return RankedFeaturesRecord.class;
    }

    /**
     * The column <code>public.ranked_features.rel_id</code>.
     */
    public final TableField<RankedFeaturesRecord, Integer> REL_ID = createField("rel_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ranked_features.direction</code>.
     */
    public final TableField<RankedFeaturesRecord, Integer> DIRECTION = createField("direction", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ranked_features.node_id</code>.
     */
    public final TableField<RankedFeaturesRecord, Integer> NODE_ID = createField("node_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ranked_features.edge_id</code>.
     */
    public final TableField<RankedFeaturesRecord, Integer> EDGE_ID = createField("edge_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ranked_features.weight</code>.
     */
    public final TableField<RankedFeaturesRecord, Float> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>public.ranked_features.rank</code>.
     */
    public final TableField<RankedFeaturesRecord, Long> RANK = createField("rank", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.ranked_features</code> table reference
     */
    public RankedFeatures() {
        this(DSL.name("ranked_features"), null);
    }

    /**
     * Create an aliased <code>public.ranked_features</code> table reference
     */
    public RankedFeatures(String alias) {
        this(DSL.name(alias), RANKED_FEATURES);
    }

    /**
     * Create an aliased <code>public.ranked_features</code> table reference
     */
    public RankedFeatures(Name alias) {
        this(alias, RANKED_FEATURES);
    }

    private RankedFeatures(Name alias, Table<RankedFeaturesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RankedFeatures(Name alias, Table<RankedFeaturesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RankedFeatures(Table<O> child, ForeignKey<O, RankedFeaturesRecord> key) {
        super(child, key, RANKED_FEATURES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RF_NODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RankedFeatures as(String alias) {
        return new RankedFeatures(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RankedFeatures as(Name alias) {
        return new RankedFeatures(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RankedFeatures rename(String name) {
        return new RankedFeatures(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RankedFeatures rename(Name name) {
        return new RankedFeatures(name, null);
    }
}
