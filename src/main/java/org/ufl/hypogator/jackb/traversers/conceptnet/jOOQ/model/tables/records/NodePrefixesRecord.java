/*
 * This file is generated by jOOQ.
 */
package org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.records;


import org.ufl.hypogator.jackb.traversers.conceptnet.jOOQ.model.tables.NodePrefixes;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodePrefixesRecord extends TableRecordImpl<NodePrefixesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1861870652;

    /**
     * Setter for <code>public.node_prefixes.node_id</code>.
     */
    public void setNodeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.node_prefixes.node_id</code>.
     */
    public Integer getNodeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.node_prefixes.prefix_id</code>.
     */
    public void setPrefixId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.node_prefixes.prefix_id</code>.
     */
    public Integer getPrefixId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return NodePrefixes.NODE_PREFIXES.NODE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return NodePrefixes.NODE_PREFIXES.PREFIX_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPrefixId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPrefixId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodePrefixesRecord value1(Integer value) {
        setNodeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodePrefixesRecord value2(Integer value) {
        setPrefixId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodePrefixesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NodePrefixesRecord
     */
    public NodePrefixesRecord() {
        super(NodePrefixes.NODE_PREFIXES);
    }

    /**
     * Create a detached, initialised NodePrefixesRecord
     */
    public NodePrefixesRecord(Integer nodeId, Integer prefixId) {
        super(NodePrefixes.NODE_PREFIXES);

        set(0, nodeId);
        set(1, prefixId);
    }
}
