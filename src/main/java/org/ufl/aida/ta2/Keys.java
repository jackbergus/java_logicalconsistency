/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ta2;


import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.ufl.aida.ta2.tables.MentionsForUpdate;
import org.ufl.aida.ta2.tables.Tuples;
import org.ufl.aida.ta2.tables.records.MentionsForUpdateRecord;
import org.ufl.aida.ta2.tables.records.TuplesRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MentionsForUpdateRecord> PK_MENTIONS_FOR_UPDATE = UniqueKeys0.PK_MENTIONS_FOR_UPDATE;
    public static final UniqueKey<TuplesRecord> PK_TUPLES = UniqueKeys0.PK_TUPLES;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<MentionsForUpdateRecord> PK_MENTIONS_FOR_UPDATE = Internal.createUniqueKey(MentionsForUpdate.MENTIONS_FOR_UPDATE, "pk_mentions_for_update", MentionsForUpdate.MENTIONS_FOR_UPDATE.AMID);
        public static final UniqueKey<TuplesRecord> PK_TUPLES = Internal.createUniqueKey(Tuples.TUPLES, "pk_tuples", Tuples.TUPLES.MID);
    }
}
