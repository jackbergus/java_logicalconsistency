/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ldc.jOOQ.model.tables;


import org.ufl.aida.ldc.jOOQ.model.Public;
import org.ufl.aida.ldc.jOOQ.model.tables.records.LinkedmentionsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Linkedmentions extends TableImpl<LinkedmentionsRecord> {

    private static final long serialVersionUID = -1062791623;

    /**
     * The reference instance of <code>public.linkedmentions</code>
     */
    public static final Linkedmentions LINKEDMENTIONS = new Linkedmentions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LinkedmentionsRecord> getRecordType() {
        return LinkedmentionsRecord.class;
    }

    /**
     * The column <code>public.linkedmentions.tree_id</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TREE_ID = createField("tree_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.mentionId</code>.
     */
    public final TableField<LinkedmentionsRecord, String> MENTIONID = createField("mentionId", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.id</code>.
     */
    public final TableField<LinkedmentionsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.provenance</code>.
     */
    public final TableField<LinkedmentionsRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.handle</code>.
     */
    public final TableField<LinkedmentionsRecord, String> HANDLE = createField("handle", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.text_string</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TEXT_STRING = createField("text_string", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.justification</code>.
     */
    public final TableField<LinkedmentionsRecord, String> JUSTIFICATION = createField("justification", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.description</code>.
     */
    public final TableField<LinkedmentionsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.category</code>.
     */
    public final TableField<LinkedmentionsRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.type</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.subtype</code>.
     */
    public final TableField<LinkedmentionsRecord, String> SUBTYPE = createField("subtype", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.attribute</code>.
     */
    public final TableField<LinkedmentionsRecord, String> ATTRIBUTE = createField("attribute", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.attribute2</code>.
     */
    public final TableField<LinkedmentionsRecord, String> ATTRIBUTE2 = createField("attribute2", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.start_date_type</code>.
     */
    public final TableField<LinkedmentionsRecord, String> START_DATE_TYPE = createField("start_date_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.start_date</code>.
     */
    public final TableField<LinkedmentionsRecord, String> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.end_date_type</code>.
     */
    public final TableField<LinkedmentionsRecord, String> END_DATE_TYPE = createField("end_date_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.end_date</code>.
     */
    public final TableField<LinkedmentionsRecord, String> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.kb_id</code>.
     */
    public final TableField<LinkedmentionsRecord, String> KB_ID = createField("kb_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.topic_id</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TOPIC_ID = createField("topic_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.textoffset_startchar</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TEXTOFFSET_STARTCHAR = createField("textoffset_startchar", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.linkedmentions.textoffset_endchar</code>.
     */
    public final TableField<LinkedmentionsRecord, String> TEXTOFFSET_ENDCHAR = createField("textoffset_endchar", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.linkedmentions</code> table reference
     */
    public Linkedmentions() {
        this(DSL.name("linkedmentions"), null);
    }

    /**
     * Create an aliased <code>public.linkedmentions</code> table reference
     */
    public Linkedmentions(String alias) {
        this(DSL.name(alias), LINKEDMENTIONS);
    }

    /**
     * Create an aliased <code>public.linkedmentions</code> table reference
     */
    public Linkedmentions(Name alias) {
        this(alias, LINKEDMENTIONS);
    }

    private Linkedmentions(Name alias, Table<LinkedmentionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Linkedmentions(Name alias, Table<LinkedmentionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Linkedmentions(Table<O> child, ForeignKey<O, LinkedmentionsRecord> key) {
        super(child, key, LINKEDMENTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Linkedmentions as(String alias) {
        return new Linkedmentions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Linkedmentions as(Name alias) {
        return new Linkedmentions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Linkedmentions rename(String name) {
        return new Linkedmentions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Linkedmentions rename(Name name) {
        return new Linkedmentions(name, null);
    }
}
