/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ldc.jOOQ.model;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.ufl.aida.ldc.jOOQ.model.tables.*;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1548309329;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.entityResolver</code>.
     */
    public final Entityresolver ENTITYRESOLVER = Entityresolver.ENTITYRESOLVER;

    /**
     * The table <code>public.hypothesis</code>.
     */
    public final Hypothesis HYPOTHESIS = Hypothesis.HYPOTHESIS;

    /**
     * The table <code>public.linkedmentions</code>.
     */
    public final Linkedmentions LINKEDMENTIONS = Linkedmentions.LINKEDMENTIONS;

    /**
     * The table <code>public.mention</code>.
     */
    public final Mention MENTION = Mention.MENTION;

    /**
     * The table <code>public.mentionslot</code>.
     */
    public final Mentionslot MENTIONSLOT = Mentionslot.MENTIONSLOT;

    /**
     * The table <code>public.miniKB</code>.
     */
    public final Minikb MINIKB = Minikb.MINIKB;

    /**
     * The table <code>public.slot</code>.
     */
    public final Slot SLOT = Slot.SLOT;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Entityresolver.ENTITYRESOLVER,
            Hypothesis.HYPOTHESIS,
            Linkedmentions.LINKEDMENTIONS,
            Mention.MENTION,
            Mentionslot.MENTIONSLOT,
            Minikb.MINIKB,
            Slot.SLOT);
    }
}
