/*
 * This file is generated by jOOQ.
 */
package org.ufl.aida.ldc.jOOQ.model.tables.pojos;


import javax.annotation.Generated;
import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mentionslot implements Serializable {

    private static final long serialVersionUID = -1203322475;

    private String   treeId;
    private String   id;
    private String   mentionid;
    private String   type;
    private String   subtype;
    private String[] attributes;
    private Object   txtEntrypoint;
    private Object   slots;
    private Object   startDate;
    private Object   endDate;
    private String   textString;
    private String   justification;
    private String   topicId;
    private String   category;
    private String   handle;
    private String   description;

    public Mentionslot() {}

    public Mentionslot(Mentionslot value) {
        this.treeId = value.treeId;
        this.id = value.id;
        this.mentionid = value.mentionid;
        this.type = value.type;
        this.subtype = value.subtype;
        this.attributes = value.attributes;
        this.txtEntrypoint = value.txtEntrypoint;
        this.slots = value.slots;
        this.startDate = value.startDate;
        this.endDate = value.endDate;
        this.textString = value.textString;
        this.justification = value.justification;
        this.topicId = value.topicId;
        this.category = value.category;
        this.handle = value.handle;
        this.description = value.description;
    }

    public Mentionslot(
        String   treeId,
        String   id,
        String   mentionid,
        String   type,
        String   subtype,
        String[] attributes,
        Object   txtEntrypoint,
        Object   slots,
        Object   startDate,
        Object   endDate,
        String   textString,
        String   justification,
        String   topicId,
        String   category,
        String   handle,
        String   description
    ) {
        this.treeId = treeId;
        this.id = id;
        this.mentionid = mentionid;
        this.type = type;
        this.subtype = subtype;
        this.attributes = attributes;
        this.txtEntrypoint = txtEntrypoint;
        this.slots = slots;
        this.startDate = startDate;
        this.endDate = endDate;
        this.textString = textString;
        this.justification = justification;
        this.topicId = topicId;
        this.category = category;
        this.handle = handle;
        this.description = description;
    }

    public String getTreeId() {
        return this.treeId;
    }

    public void setTreeId(String treeId) {
        this.treeId = treeId;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getMentionid() {
        return this.mentionid;
    }

    public void setMentionid(String mentionid) {
        this.mentionid = mentionid;
    }

    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getSubtype() {
        return this.subtype;
    }

    public void setSubtype(String subtype) {
        this.subtype = subtype;
    }

    public String[] getAttributes() {
        return this.attributes;
    }

    public void setAttributes(String... attributes) {
        this.attributes = attributes;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public Object getTxtEntrypoint() {
        return this.txtEntrypoint;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public void setTxtEntrypoint(Object txtEntrypoint) {
        this.txtEntrypoint = txtEntrypoint;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public Object getSlots() {
        return this.slots;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public void setSlots(Object slots) {
        this.slots = slots;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public Object getStartDate() {
        return this.startDate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public void setStartDate(Object startDate) {
        this.startDate = startDate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public Object getEndDate() {
        return this.endDate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @Deprecated
    public void setEndDate(Object endDate) {
        this.endDate = endDate;
    }

    public String getTextString() {
        return this.textString;
    }

    public void setTextString(String textString) {
        this.textString = textString;
    }

    public String getJustification() {
        return this.justification;
    }

    public void setJustification(String justification) {
        this.justification = justification;
    }

    public String getTopicId() {
        return this.topicId;
    }

    public void setTopicId(String topicId) {
        this.topicId = topicId;
    }

    public String getCategory() {
        return this.category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getHandle() {
        return this.handle;
    }

    public void setHandle(String handle) {
        this.handle = handle;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Mentionslot (");

        sb.append(treeId);
        sb.append(", ").append(id);
        sb.append(", ").append(mentionid);
        sb.append(", ").append(type);
        sb.append(", ").append(subtype);
        sb.append(", ").append(Arrays.toString(attributes));
        sb.append(", ").append(txtEntrypoint);
        sb.append(", ").append(slots);
        sb.append(", ").append(startDate);
        sb.append(", ").append(endDate);
        sb.append(", ").append(textString);
        sb.append(", ").append(justification);
        sb.append(", ").append(topicId);
        sb.append(", ").append(category);
        sb.append(", ").append(handle);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
